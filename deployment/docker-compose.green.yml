version: '3.8'

services:
  backend-green:
    image: ${DOCKER_USERNAME}/backend:${IMAGE_TAG}
    container_name: msti-backend-green
    restart: unless-stopped
    pull_policy: always
    ports:
      - "3003:3001"  # Different external port for green environment
      - "3004:3002"  # Different external port for green environment
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - INFLUX_URL=${INFLUX_URL}
      - INFLUX_TOKEN=${INFLUX_TOKEN}
      - PORT=3001
      - WEBHOOK_PORT=3002
      - APPLY_MIGRATIONS=false
      - FRONTEND_URL=http://192.168.238.10:5173
    networks:
      - msti-green
    labels:
      - "deployment.environment=green"
      - "deployment.version=${IMAGE_TAG}"
      - "deployment.timestamp=${DEPLOYMENT_TIMESTAMP}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  frontend-green:
    image: ${DOCKER_USERNAME}/frontend:${IMAGE_TAG}
    container_name: msti-frontend-green
    restart: unless-stopped
    pull_policy: always
    environment:
      - VITE_API_URL=http://192.168.238.10:3003/api
      - NODE_ENV=production
    ports:
      - "5173:80"  # Different port from blue (5172)
    networks:
      - msti-green
    labels:
      - "deployment.environment=green"
      - "deployment.version=${IMAGE_TAG}"
      - "deployment.timestamp=${DEPLOYMENT_TIMESTAMP}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - backend-green



networks:
  msti-green:
    driver: bridge
    name: msti-green 