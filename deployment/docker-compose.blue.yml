version: '3.8'

services:
  backend-blue:
    image: ${DOCKER_USERNAME}/backend:${IMAGE_TAG}
    container_name: msti-backend-blue
    restart: unless-stopped
    pull_policy: always
    ports:
      - "3001:3001"
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - INFLUX_URL=${INFLUX_URL}
      - INFLUX_TOKEN=${INFLUX_TOKEN}
      - PORT=3001
      - WEBHOOK_PORT=3002
      - APPLY_MIGRATIONS=false
      - FRONTEND_URL=http://192.168.238.10:5172
    networks:
      - msti-blue
    labels:
      - "deployment.environment=blue"
      - "deployment.version=${IMAGE_TAG}"
      - "deployment.timestamp=${DEPLOYMENT_TIMESTAMP}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  frontend-blue:
    image: ${DOCKER_USERNAME}/frontend:${IMAGE_TAG}
    container_name: msti-frontend-blue
    restart: unless-stopped
    pull_policy: always
    environment:
      - VITE_API_URL=http://192.168.238.10:3001/api
      - NODE_ENV=production
    ports:
      - "5172:80"
    networks:
      - msti-blue
    labels:
      - "deployment.environment=blue"
      - "deployment.version=${IMAGE_TAG}"
      - "deployment.timestamp=${DEPLOYMENT_TIMESTAMP}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - backend-blue



networks:
  msti-blue:
    driver: bridge
    name: msti-blue 